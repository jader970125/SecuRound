@{
    ViewData["Title"] = "Mapa con Marcadores (Base de Datos)";
}

<h2 style="color:white;">SECUROUND</h2>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<div id="container" style="display:flex;gap:10px;">
    <!-- Menú lateral -->
    <div id="menu" style="width:250px;padding:10px;background-color:#000;color:white;border-radius:8px;">
        <h4>Filtrar registros</h4>
        <label><input type="checkbox" class="role-filter" value="Guarda" checked> Guardas</label><br>
        <label><input type="checkbox" class="role-filter" value="Despachador" checked> Despachadores</label><br>
        <label><input type="checkbox" class="role-filter" value="Administrador" checked> Administradores</label>
    </div>

    <!-- Mapa -->
    <div id="map" style="flex:1;height:500px;border-radius:12px;"></div>
</div>

<script>
    var map = L.map('map').setView([6.2442, -75.5812], 13);

    // Capa base
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    // Icono personalizado
    var customIcon = L.icon({
        iconUrl: '/icons/marker.png',
        iconSize: [40, 40],
        iconAnchor: [20, 40],
        popupAnchor: [0, -40]
    });

    var marcadores = [];

    // ✅ Cargar registros desde el backend
    async function cargarRegistros() {
        const response = await fetch('/Map/GetRegistros');
        const data = await response.json();

        // Limpia marcadores previos
        marcadores.forEach(m => map.removeLayer(m));
        marcadores = [];

        // Filtra según checkboxes
        const rolesSeleccionados = Array.from(document.querySelectorAll('.role-filter:checked')).map(cb => cb.value);

        data.forEach(r => {
            if (rolesSeleccionados.includes(r.userRol)) {
                var marker = L.marker([r.latitud, r.longitud], { icon: customIcon })
                    .bindPopup(`<b>${r.agente}</b><br>Rol: ${r.userRol}<br>Hora: ${new Date(r.hora).toLocaleString()}`);
                marker.addTo(map);
                marcadores.push(marker);
            }
        });
    }

    // ✅ Escuchar cambios de checkboxes
    document.querySelectorAll(".role-filter").forEach(cb => {
        cb.addEventListener("change", cargarRegistros);
    });

    // ✅ Primera carga
    cargarRegistros();
</script>
